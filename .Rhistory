geom_point()+
geom_smooth(se=F, method = 'lm')+
scale_x_continuous(breaks=0:10, lims(0,10)) +
scale_y_continuous(breaks=0:10, lims(0,10)) +
theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))
?scale_y_continuous
ggplot(prac, aes(x=practice, y=performance))+
theme_apa()+
geom_point()+
geom_smooth(se=F, method = 'lm')+
scale_x_continuous(breaks=0:10, limits=c(0,10)) +
scale_y_continuous(breaks=0:10, limits=c(0,10)) +
theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))
mysleep = sleep %>%
mutate(extra=sqrt(extra^2))
mysleep
mysleep = sleep %>%
mutate(
volleyball_points=sqrt(extra^2),
group=factor(group, levels=c(1,2), labels=c("Men", "Women"))
)
mysleep
mysleep = sleep %>%
mutate(
volleyball_skill = sqrt(extra^2),
group=factor(group, levels=c(1,2), labels=c("Men", "Women"))
)
mysleep
volleyball = sleep %>%
mutate(
`volleyball skill` = sqrt(extra^2),
gender = factor(group, levels=c(1,2), labels=c("Men", "Women"))
)
volleyball
volleyball = sleep %>%
mutate(
`volleyball skill` = sqrt(extra^2),
gender = factor(group, levels=c(1,2), labels=c("Men", "Women"))
)
ggplot(mysleep, aes(y=`volleyball skill`, x=gender, fill=gender))+
stat_summary(fun.y=mean, position=position_dodge(width=0.95), geom="bar")+
theme_apa()+
ylab("score")+
theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))
ggplot(volleyball, aes(y=`volleyball skill`, x=gender, fill=gender))+
stat_summary(fun.y=mean, position=position_dodge(width=0.95), geom="bar")+
theme_apa()+
ylab("score")+
theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))
ggplot(volleyball, aes(y=`volleyball skill`, x=gender, fill=gender))+
stat_summary(fun.y=mean, position=position_dodge(width=0.95), geom="bar")+
theme_apa()+
#ylab("score")+
theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))
ggplot(volleyball, aes(y=`volleyball skill`, x=Gender, fill=Gender))+
stat_summary(fun.y=mean, position=position_dodge(width=0.95), geom="bar")+
theme_apa()+
#ylab("score")+
theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_discrete(guide = element_blank())
ggplot(volleyball, aes(y=`volleyball skill`, x=Gender, fill=Gender))+
stat_summary(fun.y=mean, position=position_dodge(width=0.95), geom="bar")+
theme_apa()+
#ylab("score")+
theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_discrete(guide = "none")
volleyball = sleep %>%
mutate(
`volleyball skill` = sqrt(extra^2),
Gender = factor(group, levels=c(1,2), labels=c("Men", "Women"))
)
ggplot(volleyball, aes(y=`volleyball skill`, x=Gender, fill=Gender))+
stat_summary(fun.y=mean, position=position_dodge(width=0.95), geom="bar")+
theme_apa()+
#ylab("score")+
theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_discrete(guide = "none")
ggplot(volleyball, aes(y=`volleyball skill`, x=Gender, fill=Gender))+
stat_summary(fun.y=mean, position=position_dodge(width=0.95), geom="bar")+
theme_apa()+
#ylab("score")+
theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_color_discrete(guide = "none")
ggplot(volleyball, aes(y=`volleyball skill`, x=Gender, fill=Gender))+
stat_summary(fun.y=mean, position=position_dodge(width=0.95), geom="bar")+
theme_apa()+
#ylab("score")+
theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_fill_discrete(guide = "none")
ggplot(data=tibble(time=NA, ability=NA))
ggplot(data=tibble(time=0, ability=0))
ggplot(data=tibble(time=0:10, ability=0:10))
ggplot(data=tibble(time=0:10, ability=0:10))+geom_point()
ggplot(data=tibble(time=0:10, ability=0:10), aes(time, ability))
ggplot(data=tibble(time=0:10, ability=0:10), aes(time, ability))+theme_apa()
ggplot(data=tibble(time=0:10, ability=0:10), aes(time, ability))+theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))
ggplot(data=tibble(time=0:10, ability=0:10), aes(time, ability))+
theme_void()
ggplot(data=tibble(time=0:10, ability=0:10), aes(time, ability))+
theme(axes=F)
ggplot(data=tibble(time=0:10, ability=0:10), aes(time, ability))+
scale_x_manual(labels = NULL, breaks = NULL)
ggplot(data=tibble(time=0:10, ability=0:10), aes(time, ability))+
scale_x_continuous(labels = NULL, breaks = NULL)
ggplot(data=tibble(time=0:10, ability=0:10), aes(time, ability))+
scale_x_continuous(labels = NULL, breaks = NULL)+
scale_y_continuous(labels = NULL, breaks = NULL)
ggplot(data=tibble(time=0:10, ability=0:10), aes(time, ability))+
scale_x_continuous(labels = NULL, breaks = NULL)+
scale_y_continuous(labels = NULL, breaks = NULL)+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))
ggplot(data=tibble(time=0:10, ability=0:10), aes(time, ability))+
scale_x_continuous(labels = NULL, breaks = NULL)+
scale_y_continuous(labels = NULL, breaks = NULL)+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
geom_smooth()
source("~/.active-rstudio-document", echo = TRUE)
data = read_csv("real_exam_data/Data for Practical Report.csv") %>%
mutate()
data = read_csv("real_exam_data/Data for Practical Report.csv", show_col_types = F) %>%
mutate()
View(data)
names(data)
nrow(data)
summary(data$accuracy_Asian)
sd(data$accuracy_Asian)
data = read_csv("real_exam_data/Data for Practical Report.csv", show_col_types = F) %>%
mutate(accuracy_Asian=accuracy_Asian+runif(n=50, min=-1.5, max=1.5))
summary(data$accuracy_Asian)
sd(data$accuracy_Asian)
example_data = read_csv("real_exam_data/Data for Practical Report.csv", show_col_types = F) %>%
mutate(accuracy_Asian=accuracy_Asian+runif(n=50, min=-1.5, max=1.5))
ggplot(example_data, aes(x=accuracy_Caucasian, y=duration_SEA))+
geom_smooth()
ggplot(example_data, aes(y=accuracy_Caucasian, x=duration_SEA))+
geom_smooth()
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
geom_smooth()
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
geom_smooth(se=F, method='lm')
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
geom_smooth(se=F, method='lm')+
geom_smooth(se=F)
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
geom_smooth(se=F, method='lm')+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
geom_smooth(se=F, method='lm')+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
geom_smooth(se=F)
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
geom_smooth(se=F, method='lm')+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
geom_smooth(se=F)+
geom_point()
summary(example_data)
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
scale_x_continuous(limits=c(min(example_data$duration_SEA), max(example_data$duration_SEA))) +
scale_y_continuous(breaks=0:10, limits=c(0,10)) +
geom_point()
example_data = read_csv("real_exam_data/Data for Practical Report.csv", show_col_types = F) %>%
mutate(accuracy_Asian=accuracy_Asian+runif(n=50, min=-1.5, max=1.5)) %>%
select(-accuracy_Caucasian)
example_data
example_data = read_csv("real_exam_data/Data for Practical Report.csv", show_col_types = F) %>%
mutate(accuracy_Asian=accuracy_Asian+runif(n=50, min=-1.5, max=1.5)) %>%
mutate(caucasion_accuracy = accuracy_Caucasian)
example_data
example_data = read_csv("real_exam_data/Data for Practical Report.csv", show_col_types = F) %>%
mutate(accuracy_Asian=accuracy_Asian+runif(n=50, min=-1.5, max=1.5)) %>%
rename(caucasion_accuracy = accuracy_Caucasian)
example_data
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
scale_x_continuous(limits=c(min(example_data$duration_SEA), max(example_data$duration_SEA))) +
scale_y_continuous(limits=c(min(example_data$accuracy_Asian), max(example_data$accuracy_Asian))) +
geom_point()
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(example_data$duration_SEA), max(example_data$duration_SEA))) +
scale_y_continuous(limits=c(min(example_data$accuracy_Asian), max(example_data$accuracy_Asian))) +
geom_point()
summary(example_data)
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(example_data$duration_SEA), max(example_data$duration_SEA))) +
scale_y_continuous(limits=c(min(example_data$accuracy_Asian), max(example_data$accuracy_Asian)))
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(example_data$duration_SEA), max(example_data$duration_SEA))) +
scale_y_continuous(limits=c(min(example_data$accuracy_Asian), max(example_data$accuracy_Asian)), breaks=seq(25,100,25))
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(example_data$duration_SEA), max(example_data$duration_SEA))) +
scale_y_continuous(limits=c(min(example_data$accuracy_Asian), max(example_data$accuracy_Asian)), breaks=seq(0, 25,100,25))
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(example_data$duration_SEA), max(example_data$duration_SEA))) +
scale_y_continuous(limits=c(0, 100), breaks=seq(0, 25,100,25))
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(example_data$duration_SEA), max(example_data$duration_SEA))) +
scale_y_continuous(limits=c(0, 100), breaks=seq(0, 100,25))
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(example_data$duration_SEA), max(example_data$duration_SEA))) +
scale_y_continuous(limits=c(0, 100), breaks=seq(0, 100, 25)) +
geom_point()
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(example_data$duration_SEA), max(example_data$duration_SEA)), breaks=seq(0,12.5,5)) +
scale_y_continuous(limits=c(0, 100), breaks=seq(0, 100, 25))
idealised_example_data = tibble(
x=c(0,12.5),
y=c(min(example_data$accuracy_Asian), max(example_data$accuracy_Asian))
)
idealised_example_data
idealised_example_data = tibble(
x=c(0,12.5),
y=c(min(example_data$accuracy_Asian), max(example_data$accuracy_Asian))
)
ggplot(idealised_example_data, aes(y=y, x=x))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(x), max(x)), breaks=seq(0,12.5,5)) +
scale_y_continuous(limits=c(0, 100), breaks=seq(0, 100, 25))
ggplot(idealised_example_data, aes(x=x,y=y))
ggplot(idealised_example_data, aes(x=x,y=y))+geom_point()
ggplot(idealised_example_data, aes(x=x,y=y))+geom_smooth()
warnings
warnings()
ggplot(idealised_example_data, aes(x=x,y=y))+geom_smooth(se=F)
ggplot(idealised_example_data, aes(x=x,y=y))+geom_smooth(se=F, method='lm')
ggplot(idealised_example_data, aes(y=y, x=x))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(x), max(x)), breaks=seq(0,12.5,5)) +
scale_y_continuous(limits=c(0, 100), breaks=seq(0, 100, 25))+
ggplot(idealised_example_data, aes(x=x,y=y))+geom_smooth(se=F, method='lm')
idealised_example_data = tibble(
x=c(0,12.5),
y=c(min(example_data$accuracy_Asian), max(example_data$accuracy_Asian))
)
ggplot(idealised_example_data, aes(y=y, x=x))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(x), max(x)), breaks=seq(0,12.5,5)) +
scale_y_continuous(limits=c(0, 100), breaks=seq(0, 100, 25))+
ggplot(idealised_example_data, aes(x=x,y=y))+geom_smooth(se=F, method='lm')
idealised_example_data = tibble(
x=c(0,12.5),
y=c(min(example_data$accuracy_Asian), max(example_data$accuracy_Asian))
)
idealised_example_data
ggplot(idealised_example_data, aes(y=y, x=x))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(0, 12.5), breaks=seq(0,12.5,5)) +
scale_y_continuous(limits=c(0, 100), breaks=seq(0, 100, 25))
ggplot(idealised_example_data, aes(y=y, x=x))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(0, 12.5), breaks=seq(0,12.5,5)) +
scale_y_continuous(limits=c(0, 100), breaks=seq(0, 100, 25))+
geom_smooth(se=F, method='lm')
ggplot(idealised_example_data, aes(y=y, x=x))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(0, 12.5), breaks=seq(0,12.5,5)) +
scale_y_continuous(limits=c(0, 100), breaks=seq(0, 100, 25))+
geom_smooth(data=idealised_example_data,se=F, method='lm')
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(example_data$duration_SEA), max(example_data$duration_SEA)), breaks=seq(0,12.5,5)) +
scale_y_continuous(limits=c(0, 100), breaks=seq(0, 100, 25))
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(example_data$duration_SEA), max(example_data$duration_SEA)), breaks=seq(0,12.5,5)) +
scale_y_continuous(limits=c(0, 100), breaks=seq(0, 100, 25))+
geom_smooth(data=idealised_example_data,se=F, method='lm')
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(example_data$duration_SEA), max(example_data$duration_SEA)), breaks=seq(0,12.5,5)) +
scale_y_continuous(limits=c(0, 100), breaks=seq(0, 100, 25))+
geom_smooth(data=idealised_example_data, aes(x=x, y=y), se=F, method='lm')
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(0, 12.5), breaks=seq(0,12.5,5)) +
scale_y_continuous(limits=c(0, 100), breaks=seq(0, 100, 25))+
geom_smooth(data=idealised_example_data, aes(x=x, y=y), se=F, method='lm')
idealised_example_data = tibble(
x=c(0,12.5),
y=c(25,100)
)
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(0, 12.5), breaks=seq(0,12.5,5)) +
scale_y_continuous(limits=c(25, 100), breaks=seq(25, 100, 25))+
geom_smooth(data=idealised_example_data, aes(x=x, y=y), se=F, method='lm')
summary(example_data)
source("~/.active-rstudio-document", echo = TRUE)
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(jtools))
suppressPackageStartupMessages(library(readxl))
volleyball = sleep %>%
mutate(
`volleyball skill` = sqrt(extra^2),
Gender = factor(group, levels=c(1,2), labels=c("Men", "Women"))
)
ggplot(volleyball, aes(y=`volleyball skill`, x=Gender, fill=Gender))+
stat_summary(fun.y=mean, position=position_dodge(width=0.95), geom="bar")+
theme_apa()+
#ylab("score")+
theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_fill_discrete(guide = "none")
set.seed(1)
prac = read_excel("practice_vs_performance.xlsx")
prac2=prac
prac2$practice=prac2$practice+runif(10,-1.5,1.5)
prac2$performance[1] = 7.5
prac2$practice[1] = 0.5
prac2$performance[8] = 0.5
prac = prac %>% bind_rows(prac2)
ggplot(prac, aes(x=practice, y=performance))+
theme_apa()+
geom_point()+
geom_smooth(se=F, method = 'lm')+
scale_x_continuous(breaks=0:10, limits=c(0,10)) +
scale_y_continuous(breaks=0:10, limits=c(0,10)) +
theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))
ggplot(data=tibble(PRACTICE=0:10, PERFORMANCE=0:10), aes(PRACTICE, PERFORMANCE))+
scale_x_continuous(labels = NULL, breaks = NULL)+
scale_y_continuous(labels = NULL, breaks = NULL)+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))
ggplot(data=tibble(PRACTICE=0:10, PERFORMANCE=0:10), aes(PRACTICE, PERFORMANCE))+
scale_x_continuous(labels = NULL, breaks = NULL)+
scale_y_continuous(labels = NULL, breaks = NULL)+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))
ggplot(data=tibble(PRACTICE=0:10, PERFORMANCE=0:10), aes(PRACTICE, PERFORMANCE))+
scale_x_continuous(labels = NULL, breaks = NULL)+
scale_y_continuous(labels = NULL, breaks = NULL)+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
geom_smooth()
example_data = read_csv("real_exam_data/Data for Practical Report.csv", show_col_types = F) %>%
mutate(accuracy_Asian=accuracy_Asian+runif(n=50, min=-1.5, max=1.5)) %>%
rename(caucasion_accuracy = accuracy_Caucasian)
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(0, 12), breaks=seq(0, 12, 4)) +
scale_y_continuous(limits=c(25, 100), breaks=seq(25, 100, 25))
idealised_example_data = tibble(
x=c(0, 12),
y=c(25, 100)
)
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(0, 12), breaks=seq(0, 12, 4)) +
scale_y_continuous(limits=c(25, 100), breaks=seq(25, 100, 25))+
geom_smooth(data=idealised_example_data, aes(x=x, y=y), se=F, method='lm')
View(example_data)
View(idealised_example_data)
summary(example_data)
source("~/.active-rstudio-document", echo = TRUE)
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(example_data$duration_SEA), max(example_data$duration_SEA)), breaks=seq(0, 12, 4)) +
scale_y_continuous(limits=c(0, 100), breaks=seq(25, 100, 25)) +
geom_point()+
geom_smooth(se=F, method='lm')
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(example_data$duration_SEA), max(example_data$duration_SEA)), breaks=seq(0, 12, 4)) +
scale_y_continuous(limits=c(25, 100), breaks=seq(25, 100, 25)) +
geom_point()+
geom_smooth(se=F, method='lm')
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(min(example_data$duration_SEA), max(example_data$duration_SEA)), breaks=seq(0, 12, 4)) +
scale_y_continuous(limits=c(min(example_data$duration_SEA), 100), breaks=seq(25, 100, 25)) +
geom_point()+
geom_smooth(se=F, method='lm')
min(example_data$duration_SEA)
View(example_data)
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(0, 12), breaks=seq(0, 12, 4)) +
scale_y_continuous(limits=c(25, 100), breaks=seq(25, 100, 25))+
geom_smooth(data=idealised_example_data, aes(x=x, y=y), se=F, method='lm')+
labs(x = "PRACTICE\n(duration_SEA)")
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(0, 12), breaks=seq(0, 12, 4)) +
scale_y_continuous(limits=c(25, 100), breaks=seq(25, 100, 25))+
labs(x = "PRACTICE\n(duration_SEA)")+
labs(y = "PERFORMANCE\n(accuracy_Asian)")+
geom_point()
minperf=min(example_data$accuracy_Asian)
minoperf
minperf
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(0, 12), breaks=seq(0, 12, 4)) +
scale_y_continuous(limits=c(minperf, 100), breaks=seq(25, 100, 25))+
labs(x = "PRACTICE\n(duration_SEA)")+
labs(y = "PERFORMANCE\n(accuracy_Asian)")+
geom_point()
maxperf
maxperf=max(example_data$accuracy_Asian)
maxperf
source("~/.active-rstudio-document", echo = TRUE)
ggplot(volleyball, aes(y=`volleyball skill`, x=Gender, fill=Gender))+
stat_summary(fun.y=mean, position=position_dodge(width=0.95), geom="bar")+
theme_apa()+
#ylab("score")+
theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_fill_discrete(guide = "none")
ggplot(volleyball, aes(y=`volleyball skill`, x=Gender, fill=Gender))+
stat_summary(fu=mean, position=position_dodge(width=0.95), geom="bar")+
theme_apa()+
#ylab("score")+
theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_fill_discrete(guide = "none")
ggplot(volleyball, aes(y=`volleyball skill`, x=Gender, fill=Gender))+
stat_summary(fun=mean, position=position_dodge(width=0.95), geom="bar")+
theme_apa()+
#ylab("score")+
theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_fill_discrete(guide = "none")
ggplot(volleyball, aes(y=`volleyball skill`, x=Gender, fill=Gender))+
stat_summary(fun=mean, position=position_dodge(width=0.95), geom="bar")+
theme_apa()+
theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_fill_discrete(guide = "none")
example_data = read_csv("Real Data for Practical Report.csv", show_col_types = F) %>%
mutate(accuracy_Asian=accuracy_Asian+runif(n=50, min=-1.5, max=1.5)) %>%
rename(caucasion_accuracy = accuracy_Caucasian)
example_data
real_data = read_csv("Real Data for Practical Report.csv", show_col_types = F)
View(real_data)
example_data = real_data %>%
mutate(accuracy_Asian=accuracy_Asian+runif(n=50, min=-1.5, max=1.5)) %>%
rename(caucasion_accuracy = accuracy_Caucasian)
View(example_data)
summary(real_data)
summary(example_data)
ggplot(example_data, aes(y=accuracy_Asian, x=duration_SEA))+
theme_apa()+theme(axis.title.y = element_text(angle = 0, hjust = 0.5, vjust=0.5))+
scale_x_continuous(limits=c(0, 12), breaks=seq(0, 12, 4)) +
scale_y_continuous(limits=c(minperf, maxperf), breaks=seq(25, 100, 25))+
labs(x = "PRACTICE\n(duration_SEA)")+
labs(y = "PERFORMANCE\n(accuracy_Asian)")+
geom_point()+
geom_smooth(method='lm', se=F)+
theme(axis.title.x = element_text(size = 20), axis.title.y = element_text(size = 20))
?cor.test()
cor.test(real_data$duration_SEA, real_data$accuracy_Asian, alternative="two.sided", method="pearson")
write_csv(example_data, file="Dummy Data For Practical Report.csv")
cor.test(real_data$duration_SEA, real_data$accuracy_Asian, alternative="two.sided", method="spearman")
cor.test(example_data$duration_SEA, example_data$accuracy_Asian, alternative="two.sided", method="spearman")
cor.test(real_data$duration_SEA, real_data$accuracy_Asian, alternative="two.sided", method="pearson")
cor.test(real_data$duration_SEA, real_data$accuracy_Asian, alternative="two.sided", method="spearman")
cor.test(dummy_data$duration_SEA, dummy_data$accuracy_Asian, alternative="two.sided", method="pearson")
source("~/.active-rstudio-document", echo = TRUE)
cor.test(dummy_data$duration_SEA, dummy_data$accuracy_Asian, alternative="two.sided", method="pearson")
source("~/.active-rstudio-document", echo = TRUE)
real_data
source("~/.active-rstudio-document", echo = TRUE)
View(dummy_data)
real_data = read_csv("Real Data for Practical Report.csv", show_col_types = F)
dummy_data = real_data %>%
mutate(original_acc_Asian = accuracy_Asian) %>%
mutate(accuracy_Asian = accuracy_Asian * (0.5*duration_SEA) + runif(50, -1, 2))
dummy_data = real_data %>%
mutate(original_acc_Asian = accuracy_Asian) %>%
mutate(accuracy_Asian = accuracy_Asian * (0.5*(1+duration_SEA)) + runif(50, -1, 2))
runif(50, -1, 2)
dummy_data = real_data %>%
mutate(original_acc_Asian = accuracy_Asian) %>%
mutate(accuracy_Asian = accuracy_Asian  + runif(50, -1, 3))
dummy_data = real_data %>%
mutate(original_acc_Asian = accuracy_Asian) %>%
mutate(accuracy_Asian = accuracy_Asian  + runif(50, 3, 10))
?trunc
source("~/.active-rstudio-document", echo = TRUE)
set.seed(1)
real_data = read_csv("Real Data for Practical Report.csv", show_col_types = F)
dummy_data = real_data %>%
mutate(original_acc_Asian = accuracy_Asian) %>%
mutate(accuracy_Asian = accuracy_Asian  + runif(50, -1, 7)) %>%
mutate(accuracy_Asian = case_when(
accuracy_Asian >= 100 ~ 99,
accuracy_Asian <= 0 ~ 1,
))
#mutate(accuracy_Asian=accuracy_Asian+runif(n=50, min=-.5, max=1.5))
write_csv(dummy_data, file="Dummy Data For Practical Report.csv")
minperf=min(dummy_data$accuracy_Asian)
maxperf=max(dummy_data$accuracy_Asian)
idealised_dummy_data = tibble(
x=c(0, 12),
y=c(minperf, maxperf)
)
set.seed(1)
real_data = read_csv("Real Data for Practical Report.csv", show_col_types = F)
dummy_data = real_data %>%
mutate(original_acc_Asian = accuracy_Asian) %>%
mutate(accuracy_Asian = accuracy_Asian  + runif(50, -1, 7)) %>%
mutate(accuracy_Asian = case_when(
accuracy_Asian >= 100 ~ 99,
accuracy_Asian <= 0 ~ 1,
.default=accuracy_Asian
))
#mutate(accuracy_Asian=accuracy_Asian+runif(n=50, min=-.5, max=1.5))
write_csv(dummy_data, file="Dummy Data For Practical Report.csv")
minperf=min(dummy_data$accuracy_Asian)
maxperf=max(dummy_data$accuracy_Asian)
idealised_dummy_data = tibble(
x=c(0, 12),
y=c(minperf, maxperf)
)
